<!DOCTYPE html>
<html>
<f:view xmlns="http://www.w3.org/1999/xhtml"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:p="http://primefaces.org/ui"
        xmlns:ui="http://java.sun.com/jsf/facelets">

    <h:head>
        <title>TFlow Editor</title>

        <meta charset="utf-8"/>
        <meta http-equiv="X-UA-Compatible" content="IE=edge"/>
        <meta name="viewport" content="width=device-width, initial-scale=1"/>

        <h:outputStylesheet library="css" name="editor.css#{editorCtl.forceReloadResources}" target="head"/>
    </h:head>
    <h:body>
        <h:outputScript library="js" name="editor.js#{editorCtl.forceReloadResources}" target="head"/>
        <script>console.log('-- first-line of editor --');</script>
        <div class="container">
            <ui:include src="resources/exceptionMessage.xhtml"/>
            <ui:include src="resources/topMenu.xhtml"/>
            <div class="screen-area">
                <p:splitter styleClass="p-mb-3" gutterSize="5">
                    <p:splitterPanel styleClass="left-panel p-d-flex p-ai-center p-jc-center" minSize="15" size="15">
                        <p:panel header="Step List" styleClass="tool-panel">
                            <f:facet name="actions">
                                <p:commandButton id="leftToggle" type="button"
                                                 styleClass="left-panel-toggle close"
                                                 icon="pi pi-times"/>
                            </f:facet>
                            <h:form id="stepForm">
                                <p:accordionPanel widgetVar="basic">
                                    <p:tab title="#{editorCtl.projectName}">
                                        <p:menu model="#{editorCtl.stepMenu}"/>
                                    </p:tab>
                                </p:accordionPanel>
                                <p:remoteCommand name="setActiveObj" action="#{editorCtl.selectObject}" update="propertyForm"/>
                                <p:remoteCommand name="setToolPanel" action="#{editorCtl.setToolPanel}" update="stepForm,propertyForm"/>
                            </h:form>
                        </p:panel>
                    </p:splitterPanel>

                    <p:splitterPanel styleClass="main-panel p-d-flex p-ai-center p-jc-center" minSize="15" size="55">
                        <p:panel header="" styleClass="tool-panel">
                            <f:facet name="actions">
                                <h:form id="actionForm">
                                    <p:remoteCommand name="submitZoom" action="#{editorCtl.submitZoom}"/>

                                    <p:menubar>
                                        <p:submenu label="Add">
                                            <p:menuitem value="Step" icon="pi pi-fw pi-plus" actionListener="#{editorCtl.addStep}" update="stepForm,propertyForm"/>
                                            <p:divider/>
                                            <p:menuitem value="File Directory" icon="pi pi-fw pi-plus" actionListener="#{editorCtl.addLocal}" update="propertyForm"/>
                                            <p:menuitem value="DB Connection" icon="pi pi-fw pi-plus" actionListener="#{editorCtl.addDBConnection}" update="propertyForm"/>
                                            <p:menuitem value="SFTP Connection" icon="pi pi-fw pi-plus" actionListener="#{editorCtl.addSFTPConnection}" update="propertyForm"/>
                                            <p:divider/>
                                            <p:menuitem value="Data File" icon="pi pi-fw pi-plus" actionListener="#{editorCtl.addDataFile}" update="propertyForm"/>
                                            <p:divider/>
                                            <p:menuitem value="Column" icon="pi pi-fw pi-plus" update="propertyForm"/>
                                            <p:menuitem value="Transformation" icon="pi pi-fw pi-plus" update="propertyForm"/>
                                            <p:menuitem value="Output" icon="pi pi-fw pi-plus" update="propertyForm"/>
                                        </p:submenu>

                                        <p:submenu label="Edit">
                                            <p:menuitem value="Undo" icon="pi pi-fw pi-undo"/>
                                            <p:menuitem value="Redo" icon="pi pi-fw pi-redo"/>
                                            <p:divider/>
                                            <p:menuitem value="History..." icon="pi pi-fw pi-list"/>
                                        </p:submenu>

                                        <p:divider layout="vertical"/>

                                        <p:submenu label="View">
                                            <p:menuitem value="Step List" icon="pi pi-fw pi-list" onclick="toggleLeft()"/>
                                            <p:menuitem value="Property List" icon="pi pi-fw pi-list" onclick="toggleRight()"/>
                                        </p:submenu>

                                        <p:submenu label="Test">
                                            <p:menuitem value="Write Serialize (test)" icon="pi pi-fw pi-plus"
                                                        actionListener="#{editorCtl.testWriteSerialize}"/>
                                            <p:menuitem value="Read Serialize (test)" icon="pi pi-fw pi-plus"
                                                        actionListener="#{editorCtl.testReadSerialize}"/>
                                        </p:submenu>

                                        <p:divider layout="vertical"/>

                                        <p:menuitem styleClass="zoom-factor">
                                            <p:outputLabel value="Zoom : "/>
                                            <p:inputNumber id="zoomFactor" symbol="%" symbolPosition="s"
                                                           required="true" value="#{editorCtl.zoom}"
                                                           onkeyup="zoomStart();zoomEnd(1);"/>
                                        </p:menuitem>

                                        <p:menuitem styleClass="zoom-factor">
                                            <p:slider for="zoomFactor" minValue="0.01" maxValue="200"
                                                      step="0.01" range="max" onSlideStart="zoomStart()"
                                                      onSlide="zoom()" onSlideEnd="zoomEnd(1)"/>
                                        </p:menuitem>
                                    </p:menubar>
                                </h:form>
                            </f:facet>

                            <iframe id="flowchart" src="flowchart.xhtml"></iframe>

                        </p:panel>
                    </p:splitterPanel>

                    <p:splitterPanel styleClass="right-panel p-d-flex p-ai-center p-jc-center" minSize="15" size="30">
                        <p:panel header="Property List" styleClass="tool-panel">
                            <f:facet name="actions">
                                <p:commandButton id="rightToggle" type="button" styleClass="right-panel-toggle close" icon="pi pi-times"/>
                            </f:facet>

                            <h:form id="propertyForm">
                                <p:scrollPanel styleClass="properties" style="height:100%;">
                                    <p:importEnum type="com.tflow.model.editor.PropertyType" var="PropertyType"/>
                                    <h3>#{editorCtl.activeObject.properties}</h3>
                                    <sup>#{editorCtl.activeObject.getClass().getTypeName()}</sup>
                                    <p:divider/>

                                    <p:repeat value="#{editorCtl.propertyList}" var="prop">

                                        <p:divider rendered="#{PropertyType.SEPARATOR==prop.type}" align="left">
                                            <span>#{prop.label}</span>
                                        </p:divider>

                                        <p:outputPanel styleClass="ui-g" rendered="#{PropertyType.READONLY==prop.type}">
                                            <div class="ui-g-4 property-label">#{prop.label}</div>
                                            <div class="ui-g-8 property-label">#{prop.hasParent()?editorCtl.activeObject[prop.varParent][prop.var]:editorCtl.activeObject[prop.var]}</div>
                                        </p:outputPanel>

                                        <p:outputPanel styleClass="ui-g" rendered="#{PropertyType.BOOLEAN==prop.type}">
                                            <div class="ui-g-4 property-label">#{prop.label}</div>
                                            <div class="ui-g-8">
                                                <p:inputSwitch value="#{prop.hasParent()?editorCtl.activeObject[prop.varParent][prop.var]:editorCtl.activeObject[prop.var]}">
                                                    <p:ajax event="change" onsuccess="updateEm('#{editorCtl.activeObject.selectableId}');#{prop.javaScript}" process="@this" update="#{prop.update}"/>
                                                </p:inputSwitch>
                                            </div>
                                            <div class="ui-g-12" style="font-size:8px !important;color:gray;">#{prop}</div>
                                        </p:outputPanel>

                                        <p:outputPanel styleClass="ui-g" rendered="#{PropertyType.STRING==prop.type}">
                                            <div class="ui-g-4 property-label">#{prop.label}</div>
                                            <div class="ui-g-8">
                                                <p:inputText value="#{prop.hasParent()?editorCtl.activeObject[prop.varParent][prop.var]:editorCtl.activeObject[prop.var]}">
                                                    <p:ajax event="change" onsuccess="updateEm('#{editorCtl.activeObject.selectableId}');#{prop.javaScript}" process="@this" update="#{prop.update}"/>
                                                </p:inputText>
                                            </div>
                                            <div class="ui-g-12" style="font-size:8px !important;color:gray;">#{prop}</div>
                                        </p:outputPanel>

                                        <p:outputPanel styleClass="ui-g" rendered="#{PropertyType.STRINGARRAY==prop.type}">
                                            <div class="ui-g-4 property-label">#{prop.label}</div>
                                            <div class="ui-g-8">
                                                <p:inputTextarea value="#{prop.hasParent()?editorCtl.activeObject[prop.varParent][prop.var]:editorCtl.activeObject[prop.var]}" converter="StringArray" converterParam="#{prop.params[0]}">
                                                    <p:ajax event="change" onsuccess="updateEm('#{editorCtl.activeObject.selectableId}');#{prop.javaScript}" process="@this" update="#{prop.update}"/>
                                                </p:inputTextarea>
                                            </div>
                                            <div class="ui-g-12" style="font-size:8px !important;color:gray;">#{prop}</div>
                                        </p:outputPanel>

                                        <p:outputPanel styleClass="ui-g" rendered="#{PropertyType.INT==prop.type}">
                                            <div class="ui-g-4 property-label">#{prop.label}</div>
                                            <div class="ui-g-8">
                                                <p:inputNumber value="#{prop.hasParent()?editorCtl.activeObject[prop.varParent][prop.var]:editorCtl.activeObject[prop.var]}">
                                                    <p:ajax event="change" onsuccess="updateEm('#{editorCtl.activeObject.selectableId}');#{prop.javaScript}" process="@this" update="#{prop.update}"/>
                                                </p:inputNumber>
                                            </div>
                                            <div class="ui-g-12" style="font-size:8px !important;color:gray;">#{prop}</div>
                                        </p:outputPanel>

                                        <p:outputPanel styleClass="ui-g" rendered="#{PropertyType.COLUMNARRAY==prop.type}">
                                            <div class="ui-g-4 property-label">#{prop.label}</div>
                                            <div class="ui-g-8">
                                                <p:selectCheckboxMenu value="#{prop.hasParent()?editorCtl.activeObject[prop.varParent][prop.var]:editorCtl.activeObject[prop.var]}">
                                                    <f:selectItems value="#{editorCtl.getColumnList((prop.paramCount() > 1)?editorCtl.activeObject[prop.params[0]][prop.params[1]]:editorCtl.activeObject[prop.params[0]])}" var="column" itemLabel="#{column.label}" itemValue="#{column.value}"/>
                                                    <p:ajax event="change" onsuccess="updateEm('#{editorCtl.activeObject.selectableId}');#{prop.javaScript}" process="@this" update="#{prop.update}"/>
                                                </p:selectCheckboxMenu>
                                            </div>
                                            <div class="ui-g-12" style="font-size:8px !important;color:gray;">#{prop}</div>
                                        </p:outputPanel>

                                        <p:outputPanel styleClass="ui-g" rendered="#{prop.type.isItemList()}">
                                            <div class="ui-g-4 property-label">#{prop.label}</div>
                                            <div class="ui-g-8">
                                                <p:selectOneMenu value="#{prop.hasParent()?editorCtl.activeObject[prop.varParent][prop.var]:editorCtl.activeObject[prop.var]}">
                                                    <f:selectItem itemLabel="-- select one --"/>
                                                    <f:selectItems value="#{editorCtl.getItemList(prop.type,prop.params)}" var="item" itemLabel="#{item.label}" itemValue="#{item.value}"/>
                                                    <p:ajax event="change" onsuccess="updateEm('#{editorCtl.activeObject.selectableId}');#{prop.javaScript}" process="@this" update="#{prop.update}"/>
                                                </p:selectOneMenu>
                                            </div>
                                            <div class="ui-g-12" style="font-size:8px !important;color:gray;">#{prop}</div>
                                        </p:outputPanel>

                                    </p:repeat>
                                </p:scrollPanel>
                                <script>$(propertyCreated($('.properties')));</script>
                            </h:form>
                        </p:panel>
                    </p:splitterPanel>
                </p:splitter>
            </div>
        </div>
        <script>$(function () {
            setToolPanel([
                {name: 'refresh', value: 'all'}
            ]);
            console.log('-- last-line of editor --');
        });
        </script>
    </h:body>
</f:view>
</html>
